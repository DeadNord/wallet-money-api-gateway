# User and worker configuration
user nginx;
worker_processes auto; # The number of worker processes is determined automatically
pid /run/nginx.pid; # Path to the PID file
include /usr/lib/nginx/modules/*.conf; # Include additional modules

# Event module settings
events {
    worker_connections 1024; # Maximum number of connections per worker
}

# HTTP server configuration
http {
    resolver [fdaa::3]:53 valid=30s; # DNS resolver for internal services with a 30s validity

    # Logging settings
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /logs/access.log main;
    error_log /logs/error.log warn;

    # Rate limiting to protect against traffic spikes
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    # Proxy settings for better control and performance
    proxy_buffering off;
    proxy_buffer_size 16k;
    proxy_busy_buffers_size 24k;
    proxy_buffers 32 16k;

    # Headers to pass along with requests
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;

    # Server configuration
    server {
        listen 80; # Listening on port 80 for HTTP requests over IPv4
        listen [::]:80; # Listening on port 80 for HTTP requests over IPv6
        server_name wallet-money-api-gateway.fly.dev; # Server name

        # Proxy locations
        location /api {
            limit_req zone=api burst=10; # Applying rate limit
        }

        # Authentication service proxy
        location /api/auth/ {
            set $auth_service "http://wallet-money-auth-service.internal"; # Internal service URL
            proxy_pass $auth_service; # Proxy pass to auth service
        }

        # Direct pass to Finances Service for categories (no auth required)
        location /api/finances/categories/ {
            set $finances_service "http://wallet-money-finances-service.internal"; # Internal service URL
            proxy_pass $finances_service/api/finances/categories; # Proxy pass to finances service categories
        }

        # Direct pass to Finances Service for Swagger documentation (no auth required)
        location /api/finances/swagger/ {
            set $finances_service "http://wallet-money-finances-service.internal"; # Internal service URL
            proxy_pass $finances_service/api/finances/swagger; # Proxy pass to finances service Swagger documentation
        }

        # Direct pass to Finances Service for ReDoc documentation (no auth required)
        location /api/finances/redoc/ {
            set $finances_service "http://wallet-money-finances-service.internal"; # Internal service URL
            proxy_pass $finances_service/api/finances/redoc; # Proxy pass to finances service ReDoc documentation
        }


        # Finances service proxy
        location /api/finances/ {
            set $finances_service "http://wallet-money-finances-service.internal"; # Internal service URL
            auth_request /api/auth/access; # Auth request before forwarding
            auth_request_set $user_id $upstream_http_x_user_id; # Set user ID from auth response
            error_page 401 403 = @error_handle; # Handle auth errors
            proxy_set_header User-Id $user_id; # Pass user ID header
            proxy_pass $finances_service; # Proxy pass to finances service
        }

        # Internal authentication check
        location = /api/auth/access/ {
            set $auth_service "http://wallet-money-auth-service.internal/api/auth/access"; # Internal auth check URL
            proxy_pass $auth_service; # Proxy pass for auth check
        }

        # Let's Encrypt ACME challenge support
        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/letsencrypt;
            try_files $uri =404; # Serve ACME challenge files
        }

        # Error handling for authentication
        location @error_handle {
            return 401; # Return 401 Unauthorized for auth errors
        }
    }

    include /etc/nginx/conf.d/*.conf; # Include additional configurations
}