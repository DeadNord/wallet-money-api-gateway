user nginx;
worker_processes auto;
pid /run/nginx.pid;
include /usr/lib/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    resolver [fdaa::3]:53 valid=30s;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /logs/access.log main;
    error_log /logs/error.log warn;

    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    proxy_buffering off;
    proxy_buffer_size 16k;
    proxy_busy_buffers_size 24k;
    proxy_buffers 32 16k;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;


    server {
        listen 80;
        server_name wallet-money-api-gateway.fly.dev;


        location /api {
            limit_req zone=api burst=10;
        }

        # Проксирование к сервису аутентификации
        location /api/auth/ {
            set $auth_service "http://wallet-money-auth-service.internal";
            proxy_pass $auth_service;
        }

        # Проксирование к финансовому сервису
        location /api/finances/ {
            set $finances_service "http://wallet-money-finances-service.internal";
            auth_request /api/auth/access;
            auth_request_set $user_id $upstream_http_x_user_id;
            error_page 401 403 = @error_handle;
            proxy_set_header User-Id $user_id;
            proxy_pass $finances_service;
        }

        # Внутренняя проверка доступа пользователя
        location = /api/auth/access {
            set $auth_service "http://wallet-money-auth-service.internal/api/auth/access";
            proxy_pass $auth_service;
        }

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/letsencrypt;
            try_files $uri =404;
        }

        # Обработка ошибок аутентификации
        location @error_handle {
            return 401;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}
